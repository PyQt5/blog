{
    "version": "https://jsonfeed.org/version/1",
    "title": "PyQt • All posts by \"例子\" category",
    "description": "Python PyQt PyQt6 PyQt5 PyQt4 PySide PySide2 PySide6",
    "home_page_url": "https://pyqt5.com",
    "items": [
        {
            "id": "https://pyqt5.com/qtwebjs.html",
            "url": "https://pyqt5.com/qtwebjs.html",
            "title": "QtWebkit和QWebEngineView与Javascript交互",
            "date_published": "2019-05-22T03:30:36.000Z",
            "content_html": "<p>以前还是 <code>QWebView</code>  的时候和 <code>Javascript</code>  交互起来很方便，但是到了 Qt5.6 以后改用了 <code>QWebEngineView</code> ，并通过其提供的 <code>qwebchannel.js</code>  来进行交互。可能是由于刚出来的原因，这玩意儿有个 bug 就是必须在每次加载页面的时候手动注入，跳转页面后就失效了，需要手动注入，目前有没有修复具体未测试。这里对 <code>QWebView</code>  和 <code>QWebEngineView</code>  与 Js 交互都做了一个示例。</p>\n<span id=\"more\"></span>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<ol>\n<li>针对 <code>QWebView</code>  通过 <code>QWebFrame</code>  的 <code>addToJavaScriptWindowObject</code>  把对象传递到 <code>Javascript</code>  中</li>\n<li>针对 <code>QWebEngineView</code>  通过 <code>QWebChannel.registerObject('Bridge', QObject)</code>  把对象传递到 <code>Javascript</code>  中</li>\n<li>可以通过 <code>@pyqtSlot</code>  装饰器来申明该方法可以暴露给 <code>Javascript</code>  调用</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@pyqtSlot</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">callFromJs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    QMessageBox<span class=\"token punctuation\">.</span>information<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"来自js调用：&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>针对 <code>QWebView</code>  在 <code>Javascript</code>  中获取该对象，可以通过该对象对窗口属性以及信号和暴露出的方法进行调用</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 这里绑定窗口的标题变化信号（这个信号是由QWidget内部的）</span>\nBridge<span class=\"token punctuation\">.</span>windowTitleChanged<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token function-variable function\">fun</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">showLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标题被修改为：\"</span> <span class=\"token operator\">+</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"fun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 绑定自定义的信号customSignal</span>\nBridge<span class=\"token punctuation\">.</span>customSignal<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token function-variable function\">fun</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">showLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"收到自定义信号内容：\"</span> <span class=\"token operator\">+</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"fun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>针对 <code>QWebEngineView</code>  在 <code>Javascript</code>  中获取该对象，可以通过该对象对窗口属性以及信号和暴露出的方法进行调用</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">QWebChannel</span><span class=\"token punctuation\">(</span>qt<span class=\"token punctuation\">.</span>webChannelTransport<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">channel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">.</span>Bridge <span class=\"token operator\">=</span> channel<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>Bridge<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 这里绑定窗口的标题变化信号（这个信号是由QWidget内部的）</span>\n        Bridge<span class=\"token punctuation\">.</span>windowTitleChanged<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">showLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标题被修改为：\"</span> <span class=\"token operator\">+</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 绑定自定义的信号customSignal</span>\n        Bridge<span class=\"token punctuation\">.</span>customSignal<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           <span class=\"token function\">showLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"收到自定义信号内容：\"</span> <span class=\"token operator\">+</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><code>QWebView</code> ： <a href=\"https://github.com/PyQt5/PyQt/blob/master/QWebView/JsSignals.py\">https://github.com/PyQt5/PyQt/blob/master/QWebView/JsSignals.py</a></p>\n<p><code>QWebEngineView</code> ： <a href=\"https://github.com/PyQt5/PyQt/blob/master/QWebEngineView/JsSignals.py\">https://github.com/PyQt5/PyQt/blob/master/QWebEngineView/JsSignals.py</a></p>\n<ol>\n<li>针对 <code>QWebView</code>  的核心实现</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">WebView</span><span class=\"token punctuation\">(</span>QWebView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    customSignal <span class=\"token operator\">=</span> pyqtSignal<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>WebView<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>initSettings<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 暴露接口对象</span>\n        self<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mainFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>javaScriptWindowObjectCleared<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_exposeInterface<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_exposeInterface</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"向Js暴露调用本地方法接口\n        \"\"\"</span>\n        self<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mainFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>addToJavaScriptWindowObject<span class=\"token punctuation\">(</span><span class=\"token string\">'Bridge'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 注意pyqtSlot用于把该函数暴露给js可以调用</span>\n    <span class=\"token decorator annotation punctuation\">@pyqtSlot</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">callFromJs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        QMessageBox<span class=\"token punctuation\">.</span>information<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"来自js调用：&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sendCustomSignal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 发送自定义信号</span>\n        self<span class=\"token punctuation\">.</span>customSignal<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'当前时间: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>针对 <code>QWebEngineView</code>  的核心实现</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">WebEngineView</span><span class=\"token punctuation\">(</span>QWebEngineView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    customSignal <span class=\"token operator\">=</span> pyqtSignal<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>WebEngineView<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> QWebChannel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 把自身对象传递进去</span>\n        self<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>registerObject<span class=\"token punctuation\">(</span><span class=\"token string\">'Bridge'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 设置交互接口</span>\n        self<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setWebChannel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 注意pyqtSlot用于把该函数暴露给js可以调用</span>\n    <span class=\"token decorator annotation punctuation\">@pyqtSlot</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">callFromJs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        QMessageBox<span class=\"token punctuation\">.</span>information<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"来自js调用：&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sendCustomSignal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 发送自定义信号</span>\n        self<span class=\"token punctuation\">.</span>customSignal<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'当前时间: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QWebEngineView/ScreenShot/JsSignals.gif\" alt=\"JsSignals\"></p>\n",
            "tags": [
                "PyQt",
                "QWebView",
                "QWebEngineView",
                "浏览器"
            ]
        },
        {
            "id": "https://pyqt5.com/flipwidgetanimation.html",
            "url": "https://pyqt5.com/flipwidgetanimation.html",
            "title": "PyQt5窗口翻转动画",
            "date_published": "2019-05-15T14:48:00.000Z",
            "content_html": "<p>QQ 的界面一直是用来模仿练习做界面的好东西，这里就有一个类似 QQ 登录界面的实现翻转效果，当然这里并没有用两个窗口去做，而是用了 <code>QStackedWidget</code>  包含两个控件做切换，同时单独使用一个窗口做动画绘制。</p>\n<span id=\"more\"></span>\n<h2 id=\"原理说明\"><a class=\"markdownIt-Anchor\" href=\"#原理说明\">#</a> 原理说明</h2>\n<ol>\n<li>用了两个 <code>QLabel</code>  来显示模拟的图片界面，并实现鼠标点击模拟真实的窗口对应位置点击</li>\n<li>用了 <code>QStackedWidget</code>  来存放上面的两个界面 <code>QLabel</code></li>\n<li>点击切换时主要是对上面的两个界面进行截图并传递给翻转动画窗口</li>\n<li>通过 <code>setWindowOpacity</code>  控制主窗口的显示隐藏（保留任务栏），当然也可以用 <code>hide</code></li>\n<li>动画窗口 <code>FlipWidget.py</code>  主要实现两张图片的翻转显示，考虑到 0-90 和 90-180 之前的情况，以及图片的缩放动画</li>\n</ol>\n<h2 id=\"核心实现\"><a class=\"markdownIt-Anchor\" href=\"#核心实现\">#</a> 核心实现</h2>\n<ol>\n<li>主要是在 <code>paintEvent</code>  方法中使用 <code>QTransform</code>  对 <code>QPainter</code>  进行圆心变换以及 <code>rotate</code>  设置翻转角度</li>\n<li>同时根据翻转的角度范围对图片进行切换和缩放</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">paintEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>FlipWidget<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>paintEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'image1'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'image2'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>isVisible<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>SmoothPixmapTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 变换</span>\n        transform <span class=\"token operator\">=</span> QTransform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 把圆心设置为矩形中心</span>\n        transform<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_angle <span class=\"token operator\">>=</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>_angle <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 当翻转角度在90范围内显示第一张图，且从大图缩放到小图的过程</span>\n            painter<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 设置翻转角度</span>\n            transform<span class=\"token punctuation\">.</span>rotate<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_angle<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>YAxis<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setTransform<span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 缩放图片高度</span>\n            width <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>image1<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n            height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image1<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>\n                         <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_angle <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>Scale<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            image <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>image1<span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>image1<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                Qt<span class=\"token punctuation\">.</span>IgnoreAspectRatio<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span>\n                QPointF<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 当翻转角度在90范围内显示第二张图，且从小图缩放到原图的过程</span>\n            painter<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_angle <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                angle <span class=\"token operator\">=</span> <span class=\"token number\">180</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>_angle\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                angle <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_angle <span class=\"token operator\">-</span> <span class=\"token number\">180</span>\n            <span class=\"token comment\"># 设置翻转角度， 注意这里角度有差异</span>\n            transform<span class=\"token punctuation\">.</span>rotate<span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>YAxis<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setTransform<span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 缩放图片高度</span>\n            width <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>image2<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n            height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image2<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>\n                         <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>Scale <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            image <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>image2<span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>image2<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                Qt<span class=\"token punctuation\">.</span>IgnoreAspectRatio<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span>\n                QPointF<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/FlipWidgetAnimation.py\">https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/FlipWidgetAnimation.py</a></p>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QPropertyAnimation/ScreenShot/FlipWidgetAnimation.gif\" alt=\"FlipWidgetAnimation\"></p>\n",
            "tags": [
                "PyQt",
                "动画",
                "翻转"
            ]
        },
        {
            "id": "https://pyqt5.com/shadowradius.html",
            "url": "https://pyqt5.com/shadowradius.html",
            "title": "PyQt5无边框圆角阴影",
            "date_published": "2019-04-25T16:06:26.000Z",
            "content_html": "<p>在做 PyQt 窗口开发中经常会遇到要做一些无边框不规则的窗口，可能还会带有阴影效果，这里演示做一个简单的无边框圆角的窗口，原理就在于背景窗口的透明和一层有色背景控件的叠加。</p>\n<span id=\"more\"></span>\n<h2 id=\"原理说明\"><a class=\"markdownIt-Anchor\" href=\"#原理说明\">#</a> 原理说明</h2>\n<ol>\n<li>黑色（方便说明）的 <code>QDialog</code>  或者 <code>QWidget</code>  作为全透明无边框窗口。</li>\n<li>其中白色的 <code>QWidget</code>  才是主要显示圆角和阴影的窗口，用于承载其它控件的显示。</li>\n<li>注意红色和紫色的方框内的层次。</li>\n<li>另：如果要熟悉纯代码编写请看 <a href=\"https://github.com/PyQt5/PyQt/blob/master/Demo/FramelessDialog.py\">FramelessDialog.py</a></li>\n</ol>\n<p>如图：</p>\n<p><img src=\"/PyQt/Demo/ScreenShot/FramelessDialog1.png\" alt=\"FramelessDialog1\"></p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/Demo/FramelessDialog.py\">https://github.com/PyQt5/PyQt/blob/master/Demo/FramelessDialog.py</a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2019年4月25日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: FramelessWidget\n@description: 无边框圆角带阴影窗口 \n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QDialog<span class=\"token punctuation\">,</span> QGraphicsDropShadowEffect\n<span class=\"token keyword\">from</span> frameless <span class=\"token keyword\">import</span> Ui_Dialog\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token string\">'Irony'</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">'Copyright (c) 2019'</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QDialog<span class=\"token punctuation\">,</span> Ui_Dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mPos <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>closeButton<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 重点</span>\n        <span class=\"token comment\"># 无边框</span>\n        self<span class=\"token punctuation\">.</span>setWindowFlags<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>windowFlags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> Qt<span class=\"token punctuation\">.</span>FramelessWindowHint<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 背景透明（就是ui中黑色背景的那个控件）</span>\n        self<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>WA_TranslucentBackground<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 添加阴影</span>\n        effect <span class=\"token operator\">=</span> QGraphicsDropShadowEffect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        effect<span class=\"token punctuation\">.</span>setBlurRadius<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n        effect<span class=\"token punctuation\">.</span>setOffset<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        effect<span class=\"token punctuation\">.</span>setColor<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>gray<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setGraphicsEffect<span class=\"token punctuation\">(</span>effect<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 加上简单的移动功能</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"鼠标点击事件\"\"\"</span>\n        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token punctuation\">.</span>LeftButton<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>mPos <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">'''鼠标弹起事件'''</span>\n        self<span class=\"token punctuation\">.</span>mPos <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>buttons<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token punctuation\">.</span>LeftButton <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>mPos<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mapToGlobal<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>mPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/Demo/ScreenShot/FramelessDialog.png\" alt=\"FramelessDialog\"></p>\n<h2 id=\"下载\"><a class=\"markdownIt-Anchor\" href=\"#下载\">#</a> 下载</h2>\n<p><a href=\"/files/%E6%97%A0%E8%BE%B9%E6%A1%86%E5%9C%86%E8%A7%92%E9%98%B4%E5%BD%B1.zip\">无边框圆角阴影.zip</a></p>\n",
            "tags": [
                "PyQt",
                "阴影",
                "无边框",
                "圆角"
            ]
        },
        {
            "id": "https://pyqt5.com/pageswitching.html",
            "url": "https://pyqt5.com/pageswitching.html",
            "title": "PyQt5之图片轮播",
            "date_published": "2018-11-24T13:45:06.000Z",
            "content_html": "<p>之前看到了 <code>QStackedWidget</code>  做切换动画，让界面不那么生硬，于是参考了 <a href=\"http://qt.shoutwiki.com/wiki/Extending_QStackedWidget_for_sliding_page_animations_in_Qt\">http://qt.shoutwiki.com/wiki/Extending_QStackedWidget_for_sliding_page_animations_in_Qt</a> 做了一个 <code>QStackedWidget</code>  的切换动画，然后利用 <code>QStackedWidget</code>  结合多个 <code>QLabel</code>  显示图片来做一个轮播效果。</p>\n<p>其实在写之前也在网上找了很多例子，参看过后发现大多例子都是利用到了 <code>paintEvent</code>  去绘制，这样其实还是比较麻烦，个人觉得更好的方式是使用 <code>QPropertyAnimation</code>  属性动画修改控件中 <code>QLabel</code>  图片控件的 pos 位置属性就可以达到移动效果了。</p>\n<span id=\"more\"></span>\n<ol>\n<li>比较核心的算法就是要计算当前页面和下一个页面的位置偏移量，比如:</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 计算偏移量</span>\noffsetX <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>frameRect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noffsetY <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>frameRect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nw_next<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> offsetX<span class=\"token punctuation\">,</span> offsetY<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> direction <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>BOTTOM2TOP<span class=\"token punctuation\">:</span>\n    offsetX <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    offsetY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>offsetY\n<span class=\"token keyword\">elif</span> direction <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>TOP2BOTTOM<span class=\"token punctuation\">:</span>\n    offsetX <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">elif</span> direction <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>RIGHT2LEFT<span class=\"token punctuation\">:</span>\n    offsetX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>offsetX\n    offsetY <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">elif</span> direction <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>LEFT2RIGHT<span class=\"token punctuation\">:</span>\n    offsetY <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token comment\"># 重新定位显示区域外部/旁边的下一个窗口小部件</span>\npnext <span class=\"token operator\">=</span> w_next<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npnow <span class=\"token operator\">=</span> w_now<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>_pnow <span class=\"token operator\">=</span> pnow\n\n<span class=\"token comment\"># 移动到指定位置并显示</span>\nw_next<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>pnext<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> offsetX<span class=\"token punctuation\">,</span> pnext<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> offsetY<span class=\"token punctuation\">)</span>\nw_next<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nw_next<span class=\"token punctuation\">.</span>raise_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>\n<p>其次是对这两个页面增加关联 <code>pos</code>  属性的 <code>QPropertyAnimation</code>  动画，然后加入到并行动画组 <code>QParallelAnimationGroup</code>  中再启动即可。</p>\n</li>\n<li>\n<p>对 <code>QStackedWidget</code>  的 <code>setCurrentIndex</code>  和 <code>setCurrentWidget</code>  这两个函数进行了覆盖重写达到及时手动调用这两个函数也会产生动画效果的目的。</p>\n</li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/PageSwitching.py\">https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/PageSwitching.py</a></p>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QPropertyAnimation/ScreenShot/PageSwitching.gif\" alt=\"PageSwitching\"></p>\n",
            "tags": [
                "PyQt",
                "动画",
                "轮播"
            ]
        },
        {
            "id": "https://pyqt5.com/jumpslider.html",
            "url": "https://pyqt5.com/jumpslider.html",
            "title": "PyQt5之QSlider滑动条点击定位",
            "date_published": "2018-11-05T15:12:26.000Z",
            "content_html": "<p><code>QSlider</code>  在通常情况下支持鼠标点击可以任意拖动，或者鼠标点击则往鼠标点击的方向移动一小格，这种移动一小格通常情况下用起来很不方便，比如我要做一个播放器的播放进度条，肯定是点击某个位置就直接跳到该位置，为此需要对  <code>QSlider</code>  的鼠标事件 <code>mousePressEvent</code>  进行重写。</p>\n<span id=\"more\"></span>\n<h2 id=\"实现方法\"><a class=\"markdownIt-Anchor\" href=\"#实现方法\">#</a> 实现方法</h2>\n<p>一般的想法就是重写 <code>mousePressEvent</code>  后，得到鼠标点击的 x 和 y 点然后进行比例换算，再通过 <code>setValue</code>  来设置值，其实 <code>QSlider</code>  的 <code>style</code>  里面是有一个 <code>sliderValueFromPosition</code>  方法来计算值的。直接调用这个方法即可。</p>\n<ol>\n<li>首先通过 <code>QSlider.style().subControlRect</code>  方法计算得到滑块的区域，当鼠标点击区域在此次时则交给系统自己处理（比如按住不放拖动）</li>\n<li>通过 <code>orientation</code>  判断滑动条的方向（横竖）</li>\n<li>通过 <code>invertedAppearance</code>  判断滑动条是否反向（左右、上下）</li>\n<li>通过 <code>QSlider.style().sliderValueFromPosition(最小值, 最大值, x或者y坐标, 宽度或者高度)</code>  来计算得到值</li>\n<li>最后通过 <code>setValue</code>  来设置值</li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QSlider/ClickJumpSlider.py\">https://github.com/PyQt5/PyQt/blob/master/QSlider/ClickJumpSlider.py</a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年11月5日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: JumpSlider\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QSlider<span class=\"token punctuation\">,</span> QStyleOptionSlider<span class=\"token punctuation\">,</span> QStyle<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span>\\\n    QFormLayout<span class=\"token punctuation\">,</span> QLabel\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2018 Irony\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JumpSlider</span><span class=\"token punctuation\">(</span>QSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 获取上面的拉动块位置</span>\n        option <span class=\"token operator\">=</span> QStyleOptionSlider<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>initStyleOption<span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span>\n        rect <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>subControlRect<span class=\"token punctuation\">(</span>\n            QStyle<span class=\"token punctuation\">.</span>CC_Slider<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">,</span> QStyle<span class=\"token punctuation\">.</span>SC_SliderHandle<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> rect<span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 如果鼠标点击的位置在滑块上则交给Qt自行处理</span>\n            <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>JumpSlider<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mousePressEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 横向，要考虑invertedAppearance是否反向显示的问题</span>\n            self<span class=\"token punctuation\">.</span>setValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sliderValueFromPosition<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>minimum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>maximum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                event<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>invertedAppearance<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 纵向</span>\n            self<span class=\"token punctuation\">.</span>setValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sliderValueFromPosition<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>minimum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>maximum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>invertedAppearance<span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> event<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestWindow</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>TestWindow<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QFormLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>label1 <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addRow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>label1<span class=\"token punctuation\">,</span> JumpSlider<span class=\"token punctuation\">(</span>\n            Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">,</span> valueChanged<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> v<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>label1<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 横向-反向显示</span>\n        self<span class=\"token punctuation\">.</span>label2 <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addRow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>label2<span class=\"token punctuation\">,</span> JumpSlider<span class=\"token punctuation\">(</span>\n            Qt<span class=\"token punctuation\">.</span>Horizontal<span class=\"token punctuation\">,</span> invertedAppearance<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n            valueChanged<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> v<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>label2<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>label3 <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addRow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>label3<span class=\"token punctuation\">,</span> JumpSlider<span class=\"token punctuation\">(</span>\n            Qt<span class=\"token punctuation\">.</span>Vertical<span class=\"token punctuation\">,</span> minimumHeight<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> valueChanged<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> v<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>label3<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 纵向反向显示</span>\n        self<span class=\"token punctuation\">.</span>label4 <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addRow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>label4<span class=\"token punctuation\">,</span> JumpSlider<span class=\"token punctuation\">(</span>\n            Qt<span class=\"token punctuation\">.</span>Vertical<span class=\"token punctuation\">,</span> invertedAppearance<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n            minimumHeight<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> valueChanged<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> v<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>label4<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">import</span> cgitb\n    sys<span class=\"token punctuation\">.</span>excepthook <span class=\"token operator\">=</span> cgitb<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> TestWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QSlider/ScreenShot/ClickJumpSlider.gif\" alt=\"ClickJumpSlider\"></p>\n",
            "tags": [
                "PyQt",
                "滑动条"
            ]
        },
        {
            "id": "https://pyqt5.com/rlatticeeffect.html",
            "url": "https://pyqt5.com/rlatticeeffect.html",
            "title": "PyQt5仿网页鼠标移动点阵特效",
            "date_published": "2018-10-29T08:49:10.000Z",
            "content_html": "<p>Orz，前段时间有个 zz 需求，就是要做一个类似网页上很多个多点连线、鼠标移动跟随的那种炫酷特效，然后花了点时间在网上找了 js 做的，刚开始打算是嵌入 <code>QWebView</code>  来显示网页，后来研究了下 js 的算法代码，遂改用 <code>QWidget</code>  的 <code>paintEvent</code>  直接绘制。</p>\n<span id=\"more\"></span>\n<h2 id=\"大概思路\"><a class=\"markdownIt-Anchor\" href=\"#大概思路\">#</a> 大概思路</h2>\n<ol>\n<li>先根据窗口大小随机创建一些点</li>\n<li>遍历这些点并找到与之相关联的点</li>\n<li>在动画过程中绘制圆点和画两点之间的连线</li>\n<li>属性动画 <code>QPropertyAnimation</code>  改变颜色的透明度</li>\n</ol>\n<h2 id=\"题外\"><a class=\"markdownIt-Anchor\" href=\"#题外\">#</a> 题外</h2>\n<ol>\n<li>这里没有仔细去研究 js 里的算法优化，在浏览器里嗖嗖的就生成了，在 py 里好慢…</li>\n<li>尽量在 py 里优化了循环操作，也简单的做了个 cython 加速也才提高了 1s ? 1 倍？..</li>\n<li>不要只是为了好看用这玩意儿，和网页的效果一样，占 CPU !!! 没有任何意义</li>\n<li>如果有更好的优化算法请告知，3Q</li>\n<li>pyd 是 python3.4 生成的，删掉 pyd 也能运行</li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/RlatticeEffect.py\">https://github.com/PyQt5/PyQt/blob/master/QPropertyAnimation/RlatticeEffect.py</a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年11月22日\n@author: Irony\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@file: \n@description: \n\"\"\"</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> QPropertyAnimation<span class=\"token punctuation\">,</span> QObject<span class=\"token punctuation\">,</span> pyqtProperty<span class=\"token punctuation\">,</span> QEasingCurve<span class=\"token punctuation\">,</span>\\\n    Qt<span class=\"token punctuation\">,</span> QRectF<span class=\"token punctuation\">,</span> pyqtSignal\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QColor<span class=\"token punctuation\">,</span> QPainterPath<span class=\"token punctuation\">,</span> QPainter\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">'Copyright (c) 2018 Irony'</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\n\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> pointtool  <span class=\"token comment\"># @UnusedImport @UnresolvedImport</span>\n    getDistance <span class=\"token operator\">=</span> pointtool<span class=\"token punctuation\">.</span>getDistance\n    findClose <span class=\"token operator\">=</span> pointtool<span class=\"token punctuation\">.</span>findClose\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> math\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> p2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> p2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">findClose</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        plen <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>plen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            closest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\n            p1 <span class=\"token operator\">=</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>plen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                p2 <span class=\"token operator\">=</span> points<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                dte1 <span class=\"token operator\">=</span> getDistance<span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> p1 <span class=\"token operator\">!=</span> p2<span class=\"token punctuation\">:</span>\n                    placed <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n                    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> placed<span class=\"token punctuation\">:</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> closest<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                                closest<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p2\n                                placed <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n                    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> placed<span class=\"token punctuation\">:</span>\n                            <span class=\"token keyword\">if</span> dte1 <span class=\"token operator\">&lt;</span> getDistance<span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> closest<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                                closest<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p2\n                                placed <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            p1<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">=</span> closest\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Target</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x\n        self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>QObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    valueChanged <span class=\"token operator\">=</span> pyqtSignal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> ox<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> oy<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>__x <span class=\"token operator\">=</span> x\n        self<span class=\"token punctuation\">.</span>_x <span class=\"token operator\">=</span> x\n        self<span class=\"token punctuation\">.</span>originX <span class=\"token operator\">=</span> ox\n        self<span class=\"token punctuation\">.</span>_y <span class=\"token operator\">=</span> y\n        self<span class=\"token punctuation\">.</span>__y <span class=\"token operator\">=</span> y\n        self<span class=\"token punctuation\">.</span>originY <span class=\"token operator\">=</span> oy\n        <span class=\"token comment\"># 5个闭合点</span>\n        self<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># 圆半径</span>\n        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n        <span class=\"token comment\"># 连线颜色</span>\n        self<span class=\"token punctuation\">.</span>lineColor <span class=\"token operator\">=</span> QColor<span class=\"token punctuation\">(</span><span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">217</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 圆颜色</span>\n        self<span class=\"token punctuation\">.</span>circleColor <span class=\"token operator\">=</span> QColor<span class=\"token punctuation\">(</span><span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">217</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">initAnimation</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 属性动画</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'xanimation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>xanimation <span class=\"token operator\">=</span> QPropertyAnimation<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">,</span> <span class=\"token string\">b'x'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> valueChanged<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>valueChanged<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">,</span>\n                easingCurve<span class=\"token operator\">=</span>QEasingCurve<span class=\"token punctuation\">.</span>InOutSine<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>yanimation <span class=\"token operator\">=</span> QPropertyAnimation<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">,</span> <span class=\"token string\">b'y'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> valueChanged<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>valueChanged<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">,</span>\n                easingCurve<span class=\"token operator\">=</span>QEasingCurve<span class=\"token punctuation\">.</span>InOutSine<span class=\"token punctuation\">,</span>\n                finished<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>updateAnimation<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>updateAnimation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">updateAnimation</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>xanimation<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>yanimation<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        duration <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span>\n        self<span class=\"token punctuation\">.</span>xanimation<span class=\"token punctuation\">.</span>setDuration<span class=\"token punctuation\">(</span>duration<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>yanimation<span class=\"token punctuation\">.</span>setDuration<span class=\"token punctuation\">(</span>duration<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>xanimation<span class=\"token punctuation\">.</span>setStartValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__x<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>xanimation<span class=\"token punctuation\">.</span>setEndValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>originX <span class=\"token operator\">-</span> <span class=\"token number\">50</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>yanimation<span class=\"token punctuation\">.</span>setStartValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__y<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>yanimation<span class=\"token punctuation\">.</span>setEndValue<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>originY <span class=\"token operator\">-</span> <span class=\"token number\">50</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>xanimation<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>yanimation<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@pyqtProperty</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_x\n\n    <span class=\"token decorator annotation punctuation\">@x<span class=\"token punctuation\">.</span>setter</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_x <span class=\"token operator\">=</span> x\n\n    <span class=\"token decorator annotation punctuation\">@pyqtProperty</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_y\n\n    <span class=\"token decorator annotation punctuation\">@y<span class=\"token punctuation\">.</span>setter</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_y <span class=\"token operator\">=</span> y\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMouseTracking<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>points <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> Target<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>initPoints<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">paintEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>paintEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>begin<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>fillRect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>animate<span class=\"token punctuation\">(</span>painter<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mouseMoveEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 鼠标移动时更新xy坐标</span>\n        self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">initPoints</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 创建点</span>\n        stepX <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">20</span>\n        stepY <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">20</span>\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>stepX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>stepY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                ox <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> stepX\n                oy <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> stepY\n                point <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">(</span>ox<span class=\"token punctuation\">,</span> ox<span class=\"token punctuation\">,</span> oy<span class=\"token punctuation\">,</span> oy<span class=\"token punctuation\">)</span>\n                point<span class=\"token punctuation\">.</span>valueChanged<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">)</span>\n\n        t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 每个点寻找5个闭合点</span>\n        findClose<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> painter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 检测点的范围</span>\n            value <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>getDistance<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 其实就是修改颜色透明度</span>\n                p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span>\n                p<span class=\"token punctuation\">.</span>circleColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">:</span>\n                p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n                p<span class=\"token punctuation\">.</span>circleColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">40000</span><span class=\"token punctuation\">:</span>\n                p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span><span class=\"token punctuation\">)</span>\n                p<span class=\"token punctuation\">.</span>circleColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                p<span class=\"token punctuation\">.</span>circleColor<span class=\"token punctuation\">.</span>setAlphaF<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 画线条</span>\n            <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">.</span>alpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> pc <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">.</span>closest<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> pc<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">continue</span>\n                    path <span class=\"token operator\">=</span> QPainterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    path<span class=\"token punctuation\">.</span>moveTo<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n                    path<span class=\"token punctuation\">.</span>lineTo<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n                    painter<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    painter<span class=\"token punctuation\">.</span>setPen<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>lineColor<span class=\"token punctuation\">)</span>\n                    painter<span class=\"token punctuation\">.</span>drawPath<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n                    painter<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 画圆</span>\n            painter<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setPen<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>NoPen<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setBrush<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>circleColor<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>drawRoundedRect<span class=\"token punctuation\">(</span>QRectF<span class=\"token punctuation\">(</span>\n                p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 开启动画</span>\n            p<span class=\"token punctuation\">.</span>initAnimation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">import</span> cgitb\n    sys<span class=\"token punctuation\">.</span>excepthook <span class=\"token operator\">=</span> cgitb<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QPropertyAnimation/ScreenShot/RlatticeEffect.gif\" alt=\"RlatticeEffect\"></p>\n",
            "tags": [
                "PyQt",
                "动画",
                "特效"
            ]
        },
        {
            "id": "https://pyqt5.com/datawidgetmapper_625781186.html",
            "url": "https://pyqt5.com/datawidgetmapper_625781186.html",
            "title": "QDataWidgetMapper 数据库绑定 QLineEdit控件",
            "date_published": "2018-10-29T08:17:59.000Z",
            "content_html": "<p>qt 为操作数据库提供了一个 model+view 的模式，这样简单的出入库逻辑就不需要自己编写。</p>\n<p><code>QDataWidgetMapper</code>  可以 将数据库的数据 映射到其他控件 。</p>\n<p>注意：表格里的数据修改 还没有提交到数据库，需要点击提交按钮才生效。</p>\n<span id=\"more\"></span>\n<p><a href=\"https://github.com/PyQt5/PyQt/tree/master/Test/partner_625781186/16_sqlModel/01_mapper\">https://github.com/PyQt5/PyQt/tree/master/Test/partner_625781186/16_sqlModel/01_mapper</a></p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#-*- coding: utf-8 -*-</span>\n\n<span class=\"token keyword\">from</span> PyQt5 <span class=\"token keyword\">import</span>  QtWidgets<span class=\"token punctuation\">,</span> QtGui<span class=\"token punctuation\">,</span> QtCore\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtSql <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">import</span> sys\n\nsys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'./ui'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> Ui_MainWindow <span class=\"token keyword\">import</span> Ui_MainWindow\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span><span class=\"token punctuation\">(</span>QMainWindow<span class=\"token punctuation\">,</span> Ui_MainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parent<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span>  <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setupUi<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\">#===============================   db   ======================================#</span>\n        <span class=\"token comment\"># self.db = QSqlDatabase.addDatabase('QMYSQL')</span>\n        <span class=\"token comment\"># self.db.setHostName(\"127.0.0.1\")  # set address</span>\n        <span class=\"token comment\"># self.db.setUserName(\"root\")  # set user name</span>\n        <span class=\"token comment\"># self.db.setPassword('123456')  # set user pwd   </span>\n        <span class=\"token comment\"># self.db.setDatabaseName(\"database\")</span>\n        \n        self<span class=\"token punctuation\">.</span>db <span class=\"token operator\">=</span> QSqlDatabase<span class=\"token punctuation\">.</span>addDatabase<span class=\"token punctuation\">(</span><span class=\"token string\">'QSQLITE'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>setDatabaseName<span class=\"token punctuation\">(</span><span class=\"token string\">'./db/database.db'</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\">#================================= codemodel =====================================#</span>\n        <span class=\"token comment\"># 实例化model</span>\n        self<span class=\"token punctuation\">.</span>codeModel <span class=\"token operator\">=</span> QSqlRelationalTableModel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># model设置表</span>\n        self<span class=\"token punctuation\">.</span>initializeModel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>codeModel<span class=\"token punctuation\">,</span> <span class=\"token string\">'Mongo'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 设置编辑策略</span>\n        <span class=\"token comment\"># self.codeModel.setEditStrategy(QSqlTableModel.OnFieldChange)</span>\n        <span class=\"token comment\"># !!! 这里要注意 , 只能用这个策略 , 才可以实现自动提交</span>\n        self<span class=\"token punctuation\">.</span>codeModel<span class=\"token punctuation\">.</span>setEditStrategy<span class=\"token punctuation\">(</span>QSqlTableModel<span class=\"token punctuation\">.</span>OnManualSubmit<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>codeView <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>createView<span class=\"token punctuation\">(</span><span class=\"token string\">\"code_View\"</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>codeModel<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>verticalLayout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>codeView<span class=\"token punctuation\">)</span>  \n\n        <span class=\"token comment\">#================================ initData ==================================#</span>\n        <span class=\"token comment\"># 数据映射</span>\n        self<span class=\"token punctuation\">.</span>mapper <span class=\"token operator\">=</span> QDataWidgetMapper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 提交策略</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>setSubmitPolicy<span class=\"token punctuation\">(</span>QDataWidgetMapper<span class=\"token punctuation\">.</span>AutoSubmit<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 映射的模型源</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>setModel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>codeModel<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>addMapping<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>l1<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>addMapping<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>l2<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>addMapping<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>l3<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>addMapping<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>l4<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>addMapping<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>l5<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>toFirst<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\">#================================ pushButton ==================================#</span>\n        self<span class=\"token punctuation\">.</span>sub_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>sub_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>codeModel<span class=\"token punctuation\">.</span>submitAll<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>pre_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>toPrevious<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>next_btn<span class=\"token punctuation\">.</span>clicked<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span>toNext<span class=\"token punctuation\">)</span>\n        \n    <span class=\"token keyword\">def</span> <span class=\"token function\">initializeModel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tablename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">'''重关联。'''</span>\n        model<span class=\"token punctuation\">.</span>setTable<span class=\"token punctuation\">(</span>tablename<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#        model.setEditStrategy(QSqlTableModel.OnRowChange)</span>\n        model<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n    <span class=\"token keyword\">def</span> <span class=\"token function\">createView</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">'''创建TableView视图'''</span>\n        view <span class=\"token operator\">=</span>  QTableView<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        view<span class=\"token punctuation\">.</span>setModel<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span>\n        view<span class=\"token punctuation\">.</span>setWindowTitle<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#列宽设置</span>\n        view<span class=\"token punctuation\">.</span>horizontalHeader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setSectionResizeMode<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#行高设置</span>\n        view<span class=\"token punctuation\">.</span>verticalHeader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setSectionResizeMode<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#充满列宽</span>\n        view<span class=\"token punctuation\">.</span>horizontalHeader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setStretchLastSection<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">#        view.verticalHeader().setVisible(False)#隐藏行标题</span>\n        <span class=\"token comment\">#标题左对齐</span>\n        view<span class=\"token punctuation\">.</span>horizontalHeader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setDefaultAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignLeft<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#标题左对齐</span>\n        view<span class=\"token punctuation\">.</span>verticalHeader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setDefaultAlignment<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>AlignLeft<span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">return</span> view  \n    \n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    \n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>setStyle<span class=\"token punctuation\">(</span>QStyleFactory<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token string\">\"Fusion\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    ui <span class=\"token operator\">=</span> MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ui<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/images/datawidgetmapper.gif\" alt=\"datawidgetmapper\"></p>\n",
            "tags": [
                "PyQt",
                "Model"
            ]
        },
        {
            "id": "https://pyqt5.com/qtninepatch.html",
            "url": "https://pyqt5.com/qtninepatch.html",
            "title": "PyQt5显示.9格式的PNG图片",
            "date_published": "2018-10-26T02:00:08.000Z",
            "content_html": "<p>做过安卓开发的和使用过 QQ 的都知道 <code>.9.png</code>  这种图片格式，效果就如 QQ 的聊天气泡一样可以拉伸，这种格式的图片允许开发人员定义可扩展区域，当需要延伸图片以填充比图片本身更大区域时，可扩展区的内容被延展；允许开发人员定义内容显示区，用于显示文字或其他内容。目前在 <code>Github</code>  上有两个 C++ 版本的，在这里我把它们都用 Python 实现了一遍。另外一个我也为 <code>PyQt</code>  提供了编译好的 pyd 文件。</p>\n<span id=\"more\"></span>\n<h2 id=\"c版本\"><a class=\"markdownIt-Anchor\" href=\"#c版本\">#</a> C++ 版本</h2>\n<p>在 Github 开源库中搜索到两个 C++ 版本的</p>\n<ol>\n<li>一个是 <a href=\"https://github.com/Roninsc2/NinePatchQt\">NinePatchQt</a></li>\n<li>一个是 <a href=\"https://github.com/soramimi/QtNinePatch\">QtNinePatch</a></li>\n</ol>\n<h2 id=\"pyqt5版本\"><a class=\"markdownIt-Anchor\" href=\"#pyqt5版本\">#</a> PyQt5 版本</h2>\n<p>这里也分为两个版本，都是基于上面的 C++ 源码翻译改写过来的，具体的例子见项目里面的测试代码吧。</p>\n<ol>\n<li><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch.py\">QtNinePatch</a> 是参考第一个源码编写，用法是在 <code>paintEvent</code>  中调用</li>\n<li><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch2.py\">QtNinePatch2</a> 是参考第二个源码编写，用法是 <code>pixmap = QtNinePatch.createPixmapFromNinePatchImage(self.image, self.width(), self.height())</code>  直接得到一个处理好的 <code>QPixmap</code>  对象来使用</li>\n</ol>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<ol>\n<li>建议优先使用 pyd 版本的（后续提供 Python3.4 3.5 3.6 3.7 编译好的 32 为库文件），也可以自行编译，编译步骤见下文。</li>\n<li>其次可以使用纯 python 版本 2 的（个人觉得方便调用）</li>\n<li>最后再考虑纯 python 版本 1 的吧</li>\n<li>以上为个人意见，两个 C++ 版本的写法不一样，但是核心算法应该是类似的。</li>\n</ol>\n<h2 id=\"自行编译\"><a class=\"markdownIt-Anchor\" href=\"#自行编译\">#</a> 自行编译</h2>\n<ol>\n<li>首先要安装好 Qt、PyQt5、编译安装对应的 sip、对应的 VC++ 编译工具</li>\n<li>用 Qt Creator 打开 pro 文件进行编译</li>\n<li>进入源码中的 sip 文件夹修改 configure.py 文件</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 这里是你的VC版本和对应的Qt目录中的文件夹\nconfig.platform &#x3D; &quot;win32-msvc2010&quot;\nqt_path &#x3D; &#39;D:&#x2F;soft&#x2F;Qt&#x2F;Qt5.5.1&#x2F;5.5&#x2F;msvc2010&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>最后执行 python configure.py 来编译</li>\n</ol>\n<h2 id=\"下载\"><a class=\"markdownIt-Anchor\" href=\"#下载\">#</a> 下载</h2>\n<p><a href=\"https://github.com/PyQt5/PyQt/tree/master/QLabel\">https://github.com/PyQt5/PyQt/tree/master/QLabel</a></p>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QLabel/ScreenShot/NinePatchImage.gif\" alt=\"NinePatchImage\"></p>\n",
            "tags": [
                "PyQt",
                "图片",
                "气泡",
                ".9png"
            ]
        },
        {
            "id": "https://pyqt5.com/mselectmenu.html",
            "url": "https://pyqt5.com/mselectmenu.html",
            "title": "PyQt5菜单之多选功能",
            "date_published": "2018-10-25T01:53:34.000Z",
            "content_html": "<p>有时候会遇到这种需求：在界面某个位置弹出一个菜单，其中里面的菜单项可以多选（类似配置选项），此时用 <code>QMenu</code>  会遇到点击一个菜单项就会自动关闭，当然可以通过其他方式实现该功能，不过这里就采用 <code>QMenu</code>  通过特殊的方式来实现该需求。</p>\n<span id=\"more\"></span>\n<h2 id=\"需求\"><a class=\"markdownIt-Anchor\" href=\"#需求\">#</a> 需求</h2>\n<p>要实现的效果：</p>\n<ol>\n<li>菜单 1</li>\n<li>菜单 2</li>\n<li>菜单 3</li>\n<li>菜单 4</li>\n</ol>\n<p>点击菜单 1、2、3 可以多选不关闭菜单</p>\n<p>点击菜单 4 可以勾选，并且关闭菜单</p>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<ol>\n<li>设置菜单项可勾选：通过 <code>QAction.setCheckable(True)</code>  方法实现</li>\n<li>设置菜单不可关闭：通过覆盖 QMenu 的鼠标释放 <code>mouseReleaseEvent</code>  方法（可直接替换或者通过 <code>installEventFilter</code>  安装事件过滤器实现）</li>\n<li>在菜单的鼠标释放事件中，当点击菜单项后是通过点击点坐标来查找是否有 <code>QAction</code> ，然后触发对应的 <code>QAction</code> 。</li>\n<li>故在没有 <code>QAction</code>  的地方则直接交还给 <code>QMenu</code>  自行处理逻辑，在有 <code>QAction</code>  的地方可以根据自己的需求进行处理（如上所提）</li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年10月24日\n@author: Irony\n@site: https://github.com/892768447\n@email: 892768447@qq.com\n@file: 菜单多选不关闭\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget<span class=\"token punctuation\">,</span> QVBoxLayout<span class=\"token punctuation\">,</span> QLabel<span class=\"token punctuation\">,</span> QPushButton<span class=\"token punctuation\">,</span> QMenu<span class=\"token punctuation\">,</span>\\\n    QAction\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2018 Irony\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>labelInfo <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>button <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">'带按钮的菜单'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>labelInfo<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 添加菜单</span>\n        self<span class=\"token punctuation\">.</span>_initMenu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_initMenu</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 创建菜单</span>\n        self<span class=\"token punctuation\">.</span>_menu <span class=\"token operator\">=</span> QMenu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 替换menu的鼠标释放事件达到选择性不关闭菜单</span>\n        self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>mouseReleaseEvent <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_menu_mouseReleaseEvent\n        self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>addAction<span class=\"token punctuation\">(</span><span class=\"token string\">'菜单1'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_checkAction<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>addAction<span class=\"token punctuation\">(</span><span class=\"token string\">'菜单2'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_checkAction<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>addAction<span class=\"token punctuation\">(</span>\n            QAction<span class=\"token punctuation\">(</span><span class=\"token string\">'菜单3'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">,</span> triggered<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_checkAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        action <span class=\"token operator\">=</span> QAction<span class=\"token punctuation\">(</span><span class=\"token string\">'菜单4'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">,</span> triggered<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_checkAction<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 添加自定义的属性,判断该属性可以关闭菜单</span>\n        action<span class=\"token punctuation\">.</span>setProperty<span class=\"token punctuation\">(</span><span class=\"token string\">'canHide'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>addAction<span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> action <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 循环设置可勾选</span>\n            action<span class=\"token punctuation\">.</span>setCheckable<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">.</span>setMenu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_menu_mouseReleaseEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        action <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>actionAt<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> action<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 没有找到action就交给QMenu自己处理</span>\n            <span class=\"token keyword\">return</span> QMenu<span class=\"token punctuation\">.</span>mouseReleaseEvent<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> action<span class=\"token punctuation\">.</span><span class=\"token builtin\">property</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canHide'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果有该属性则给菜单自己处理</span>\n            <span class=\"token keyword\">return</span> QMenu<span class=\"token punctuation\">.</span>mouseReleaseEvent<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 找到了QAction则只触发Action</span>\n        action<span class=\"token punctuation\">.</span>activate<span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>Trigger<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_checkAction</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 三个action都响应该函数</span>\n        self<span class=\"token punctuation\">.</span>labelInfo<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'&#123;&#125;\\t选中：&#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>\n            action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">.</span>isChecked<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> action <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_menu<span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">import</span> cgitb\n    sys<span class=\"token punctuation\">.</span>excepthook <span class=\"token operator\">=</span> cgitb<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QMenu/ScreenShot/MultiSelect.gif\" alt=\"MultiSelect\"></p>\n",
            "tags": [
                "PyQt",
                "菜单"
            ]
        },
        {
            "id": "https://pyqt5.com/pyqt5asyncio.html",
            "url": "https://pyqt5.com/pyqt5asyncio.html",
            "title": "PyQt5结合Asyncio异步",
            "date_published": "2018-10-24T06:32:26.000Z",
            "content_html": "<p>今天尝试了下<a href=\"https://github.com/harvimt/quamash\"> quamash</a> 框架，该框架是一个 <code>PyQt</code>  的异步事件循环封装库，使用 Python3+ 的 <code>asyncio</code>  这个异步库。在看了该项目的内容后发现只有一个简单的进度条例子，故尝试用其来下载网络图片并显示。</p>\n<span id=\"more\"></span>\n<h2 id=\"安装依赖\"><a class=\"markdownIt-Anchor\" href=\"#安装依赖\">#</a> 安装依赖</h2>\n<ol>\n<li>pip install quamash</li>\n<li>pip install aiohttp</li>\n<li>Python3.5+ 和 PyQt5</li>\n</ol>\n<p>这里使用 <code>aiohttp</code>  是因为它基于 <code>asyncio</code>  封装的网络操作库，常见的 <code>get</code> 、 <code>post</code>  等方法，不过它只支持 Python3.5 及以上的版本，主要是它使用了 async def 这样的语法。</p>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<ol>\n<li>在创建 <code>QApplication</code>  后随即设置替换事件循环 <code>loop</code></li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\nloop <span class=\"token operator\">=</span> QEventLoop<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nasyncio<span class=\"token punctuation\">.</span>set_event_loop<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span>\nw <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>通过 <code>asyncio.ensure_future(func(), loop=loop)</code>  来执行某个异步函数</li>\n</ol>\n<h2 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:right\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Window</td>\n<td style=\"text-align:center\">→</td>\n<td style=\"text-align:right\">initSession（初始化 session）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">↓</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">下载按钮</td>\n<td style=\"text-align:center\">→</td>\n<td style=\"text-align:right\">doDownload（执行_doDownload 方法）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">↓</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">session.get（下载 json 数据进行解析）</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">↓</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">添加到界面</td>\n<td style=\"text-align:center\">←</td>\n<td style=\"text-align:right\">_doDownloadImage（对单张图片进行下载）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\">#</a> 源码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年10月24日\n@author: Irony\n@site: https://github.com/892768447\n@email: 892768447@qq.com\n@file: AsyncioUiClient\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">import</span> asyncio\n\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QMovie\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget<span class=\"token punctuation\">,</span> QVBoxLayout<span class=\"token punctuation\">,</span> QPushButton<span class=\"token punctuation\">,</span>\\\n    QApplication<span class=\"token punctuation\">,</span> QListWidget<span class=\"token punctuation\">,</span> QListWidgetItem<span class=\"token punctuation\">,</span> QLabel<span class=\"token punctuation\">,</span> QMessageBox\n<span class=\"token keyword\">import</span> aiohttp\n<span class=\"token keyword\">from</span> quamash <span class=\"token keyword\">import</span> QEventLoop\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2018 Irony\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\nUrl <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.doutula.com/api/search?keyword=%E6%9C%80%E6%96%B0%E8%A1%A8%E6%83%85&amp;mime=0&amp;page=&#123;&#125;'</span>\nHeaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">':authority'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'www.doutula.com'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">':method'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">':scheme'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'accept-language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'cache-control'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'max-age=0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'dnt'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'upgrade-insecure-requests'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.26 Safari/537.36 Core/1.63.6756.400 QQBrowser/10.2.2498.400'</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>listWidget <span class=\"token operator\">=</span> QListWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setSpacing<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># item直接的间隔</span>\n        <span class=\"token comment\"># 隐藏横向滚动条</span>\n        self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setHorizontalScrollBarPolicy<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>ScrollBarAlwaysOff<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 让list 从左到右排列</span>\n        self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setFlow<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>LeftToRight<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 自动换行</span>\n        self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setWrapping<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setResizeMode<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>Adjust<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>buttonMsg <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">'弹出提示框'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> clicked<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>showMessage<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>buttonDown <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">'下载图片'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> clicked<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>doDownload<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>buttonMsg<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>buttonDown<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>currentPage <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>initSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 其实没必要，session主要用在需要登录的网站。缓存cookie用</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">initSession</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">_initSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 初始化session</span>\n            self<span class=\"token punctuation\">.</span>session <span class=\"token operator\">=</span> aiohttp<span class=\"token punctuation\">.</span>ClientSession<span class=\"token punctuation\">(</span>loop<span class=\"token operator\">=</span>loop<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">)</span>\n        asyncio<span class=\"token punctuation\">.</span>ensure_future<span class=\"token punctuation\">(</span>_initSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loop<span class=\"token operator\">=</span>loop<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">_doDownloadImage</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 下载图片并添加到界面</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> self<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> resp<span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> resp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'下载失败: '</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n            path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'tmp'</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>basename<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span>\n                fp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n            item <span class=\"token operator\">=</span> QListWidgetItem<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">)</span>\n            image <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n            item<span class=\"token punctuation\">.</span>setSizeHint<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            label <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">)</span>\n            label<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> path<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 可能是动态图</span>\n                label<span class=\"token punctuation\">.</span>setMovie<span class=\"token punctuation\">(</span>QMovie<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>setItemWidget<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>listWidget<span class=\"token punctuation\">.</span>scrollToBottom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">_doDownload</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 下载工作</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>currentPage <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            QMessageBox<span class=\"token punctuation\">.</span>information<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'提示'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'已经没有更多了'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n        self<span class=\"token punctuation\">.</span>currentPage <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        url <span class=\"token operator\">=</span> Url<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>currentPage<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get url: '</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> self<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>Headers<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> resp<span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> resp<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span>\n            data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>currentPage <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'已经是最后一页了'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token comment\"># 解析json并生成item添加到界面中</span>\n            <span class=\"token keyword\">for</span> entity <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                url <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'image_url'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> url<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">continue</span>\n                <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>_doDownloadImage<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 下载图片</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">doDownload</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 响应按钮点击调用</span>\n        asyncio<span class=\"token punctuation\">.</span>ensure_future<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_doDownload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loop<span class=\"token operator\">=</span>loop<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">showMessage</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 显示对话框</span>\n        app<span class=\"token punctuation\">.</span>aboutQt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">closeEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>closed<span class=\"token punctuation\">:</span>\n            asyncio<span class=\"token punctuation\">.</span>ensure_future<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loop<span class=\"token operator\">=</span>loop<span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>closeEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">import</span> cgitb\n    <span class=\"token keyword\">import</span> os\n    os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string\">'tmp'</span><span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>excepthook <span class=\"token operator\">=</span> cgitb<span class=\"token punctuation\">.</span>enable<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    loop <span class=\"token operator\">=</span> QEventLoop<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\n    asyncio<span class=\"token punctuation\">.</span>set_event_loop<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> loop<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>run_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/images/pyqt5asyncio.gif\" alt=\"pyqt5asyncio\"></p>\n",
            "tags": [
                "PyQt",
                "Asyncio",
                "异步"
            ]
        },
        {
            "id": "https://pyqt5.com/likehtmleffect.html",
            "url": "https://pyqt5.com/likehtmleffect.html",
            "title": "PyQt5仿网页图片鼠标移动特效",
            "date_published": "2018-10-23T09:57:03.000Z",
            "content_html": "<p>em，就是类似于那种游戏官网首页的图片，鼠标放上去后来回移动，图片的前景和背景错位移动。</p>\n<span id=\"more\"></span>\n<h2 id=\"原理分析\"><a class=\"markdownIt-Anchor\" href=\"#原理分析\">#</a> 原理分析</h2>\n<ol>\n<li>2 张一样大小的透明图片，1 张作为背景，一张作为前景（比如说人物）。</li>\n<li>当鼠标往左移动时，前景人物跟着往左移动，背景往右移动</li>\n<li>计算好偏移量（见代码中）</li>\n</ol>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/ImageSlipped.py\">https://github.com/PyQt5/PyQt/blob/master/QLabel/ImageSlipped.py</a></p>\n<h2 id=\"关键代码\"><a class=\"markdownIt-Anchor\" href=\"#关键代码\">#</a> 关键代码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年10月18日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: ImageSlipped\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QPainter\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2018 Irony\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SlippedImgWidget</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> bg<span class=\"token punctuation\">,</span> fg<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SlippedImgWidget<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 开启鼠标跟踪</span>\n        self<span class=\"token punctuation\">.</span>setMouseTracking<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 背景</span>\n        self<span class=\"token punctuation\">.</span>bgPixmap <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span>bg<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 前景</span>\n        self<span class=\"token punctuation\">.</span>pePixmap <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span>fg<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 最小尺寸(背景右边和下方隐藏10个像素)</span>\n        size <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>bgPixmap<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 分成10份用于鼠标移动判断</span>\n        self<span class=\"token punctuation\">.</span>stepX <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span>\n        self<span class=\"token punctuation\">.</span>stepY <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span>\n        <span class=\"token comment\"># 偏移量</span>\n        self<span class=\"token punctuation\">.</span>_offsets <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 背景(-4,-4),前景(-4,-4)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SlippedImgWidget<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mouseMoveEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n        pos <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 偏移量</span>\n        offsetX <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>stepX<span class=\"token punctuation\">)</span>\n        offsetY <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>stepY<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetX\n        self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetY\n        self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetX\n        self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetY\n        <span class=\"token comment\"># 刷新</span>\n        self<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">paintEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SlippedImgWidget<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>paintEvent<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 绘制图形</span>\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 左上角偏移5个像素画背景图片</span>\n        painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>bgPixmap<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 右下角偏移5个像素画前景图片</span>\n        painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span>\n            self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>pePixmap<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>pePixmap<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>_offsets<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            self<span class=\"token punctuation\">.</span>pePixmap\n        <span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> SlippedImgWidget<span class=\"token punctuation\">(</span><span class=\"token string\">'images/bg.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'images/fg.png'</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/QLabel/ScreenShot/ImageSlipped.gif\" alt=\"ImageSlipped\"></p>\n",
            "tags": [
                "PyQt",
                "特效"
            ]
        },
        {
            "id": "https://pyqt5.com/followwindow.html",
            "url": "https://pyqt5.com/followwindow.html",
            "title": "PyQt5窗口跟随其它窗口",
            "date_published": "2018-10-23T07:08:56.000Z",
            "content_html": "<p>要实现 <code>PyQt</code>  窗口跟随其它外部的窗口，能想到两点办法，一个是 hook 系统事件得到目标窗口的位置和大小以及是否关闭等，二是通过循环检测窗口的位置来实现。</p>\n<span id=\"more\"></span>\n<h2 id=\"基于windows定时检测目标窗口\"><a class=\"markdownIt-Anchor\" href=\"#基于windows定时检测目标窗口\">#</a> 基于 Windows 定时检测目标窗口</h2>\n<ol>\n<li>利用 <code>win32gui</code>  模块获取目标窗口的句柄</li>\n<li>通过句柄获取目标窗口的大小位置，并设置自己的位置</li>\n<li>主要是检测时间，在 10 毫秒以下很流畅</li>\n<li>窗口关闭是根据目标句柄无效来判断</li>\n</ol>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/Demo/FollowWindow.py\">https://github.com/PyQt5/PyQt/blob/master/Demo/FollowWindow.py</a></p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年10月22日\n@author: Irony\n@site: https://github.com/892768447\n@email: 892768447@qq.com\n@file: FollowWindow\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> QTimer\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget<span class=\"token punctuation\">,</span> QVBoxLayout<span class=\"token punctuation\">,</span> QPushButton\n<span class=\"token keyword\">import</span> win32gui\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2018 Irony\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QVBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>tmpHwnd <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token comment\"># 启动定时器检测记事本的位置大小和是否关闭</span>\n        self<span class=\"token punctuation\">.</span>checkTimer <span class=\"token operator\">=</span> QTimer<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>checkWindow<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>checkTimer<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 10毫秒比较流畅</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">checkWindow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 查找</span>\n        hwnd <span class=\"token operator\">=</span> win32gui<span class=\"token punctuation\">.</span>FindWindow<span class=\"token punctuation\">(</span><span class=\"token string\">'Notepad'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>tmpHwnd <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> hwnd<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 表示记事本关闭了</span>\n            self<span class=\"token punctuation\">.</span>checkTimer<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 关闭自己</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hwnd<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n        self<span class=\"token punctuation\">.</span>tmpHwnd <span class=\"token operator\">=</span> hwnd\n        <span class=\"token comment\"># 获取位置</span>\n        rect <span class=\"token operator\">=</span> win32gui<span class=\"token punctuation\">.</span>GetWindowRect<span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    <span class=\"token comment\"># 先检测是否已有记事本打开</span>\n    hwnd <span class=\"token operator\">=</span> win32gui<span class=\"token punctuation\">.</span>FindWindow<span class=\"token punctuation\">(</span><span class=\"token string\">'Notepad'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hwnd'</span><span class=\"token punctuation\">,</span> hwnd<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hwnd<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 启动记事本</span>\n        os<span class=\"token punctuation\">.</span>startfile<span class=\"token punctuation\">(</span><span class=\"token string\">'notepad'</span><span class=\"token punctuation\">)</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果图\"><a class=\"markdownIt-Anchor\" href=\"#效果图\">#</a> 效果图</h2>\n<p><img src=\"/PyQt/Demo/ScreenShot/FollowWindow.gif\" alt=\"FollowWindow\"></p>\n",
            "tags": [
                "PyQt",
                "窗口"
            ]
        },
        {
            "id": "https://pyqt5.com/animateshadow.html",
            "url": "https://pyqt5.com/animateshadow.html",
            "title": "PyQt5动画边框阴影",
            "date_published": "2018-09-25T15:38:12.000Z",
            "content_html": "<p>为子控件增加动画阴影效果，结合 <code>QGraphicsDropShadowEffect</code>  和 <code>QPropertyAnimation</code>  动态改变阴影半径达到效果，在旧版本的 Qt 中 <code>QGraphicsDropShadowEffect</code>  可能会有点问题（父控件会影响子控件）</p>\n<span id=\"more\"></span>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p>原理是利用 QGraphicsDropShadowEffect 添加边框阴影，然后使用动画不停改变阴影的模糊半径来达到效果，如图：</p>\n<p><img src=\"/PyQt/QGraphicsDropShadowEffect/ScreenShot/ShadowEffect.gif\" alt=\"ShadowEffect\"></p>\n<h2 id=\"简单说明\"><a class=\"markdownIt-Anchor\" href=\"#简单说明\">#</a> 简单说明</h2>\n<ol>\n<li>继承 <code>QGraphicsDropShadowEffect</code>  增加动态属性 <code>radius</code></li>\n<li>通过 <code>setGraphicsEffect</code>  方法设置控件的边框阴影</li>\n<li>通过 <code>QPropertyAnimation</code>  属性动画不断改变 <code>radius</code>  的值并调用 <code>setBlurRadius</code>  更新半径值</li>\n</ol>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QGraphicsDropShadowEffect/ShadowEffect.py\">https://github.com/PyQt5/PyQt/blob/master/QGraphicsDropShadowEffect/ShadowEffect.py</a></p>\n<h2 id=\"自定义类\"><a class=\"markdownIt-Anchor\" href=\"#自定义类\">#</a> 自定义类</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年9月25日\n@author: Irony\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@file: AnimationShadowEffect\n@description: 边框动画阴影动画\n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> QPropertyAnimation<span class=\"token punctuation\">,</span> pyqtProperty\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QGraphicsDropShadowEffect\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">'Copyright (c) 2018 Irony'</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimationShadowEffect</span><span class=\"token punctuation\">(</span>QGraphicsDropShadowEffect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>AnimationShadowEffect<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setColor<span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setOffset<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setBlurRadius<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_radius <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>animation <span class=\"token operator\">=</span> QPropertyAnimation<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setTargetObject<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setDuration<span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 一次循环时间</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setLoopCount<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 永久循环</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setPropertyName<span class=\"token punctuation\">(</span><span class=\"token string\">b'radius'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 插入线行值</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setKeyValueAt<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setKeyValueAt<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>setKeyValueAt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>animation<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@pyqtProperty</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">radius</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_radius\n\n    <span class=\"token decorator annotation punctuation\">@radius<span class=\"token punctuation\">.</span>setter</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">radius</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_radius <span class=\"token operator\">=</span> r\n        self<span class=\"token punctuation\">.</span>setBlurRadius<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"测试代码\"><a class=\"markdownIt-Anchor\" href=\"#测试代码\">#</a> 测试代码</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nCreated on 2018年9月25日\n@author: Irony\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@file: Test\n@description: \n\"\"\"</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QWidget<span class=\"token punctuation\">,</span> QHBoxLayout<span class=\"token punctuation\">,</span> QLabel<span class=\"token punctuation\">,</span> QPushButton<span class=\"token punctuation\">,</span> QLineEdit\n\n<span class=\"token keyword\">from</span> AnimationShadowEffect <span class=\"token keyword\">import</span> AnimationShadowEffect  <span class=\"token comment\"># @UnresolvedImport</span>\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">'Copyright (c) 2018 Irony'</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 绿色边框</span>\n        labelGreen <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pixmap<span class=\"token operator\">=</span>QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">'1.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>labelGreen<span class=\"token punctuation\">)</span>\n        aniGreen <span class=\"token operator\">=</span> AnimationShadowEffect<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>darkGreen<span class=\"token punctuation\">,</span> labelGreen<span class=\"token punctuation\">)</span>\n        labelGreen<span class=\"token punctuation\">.</span>setGraphicsEffect<span class=\"token punctuation\">(</span>aniGreen<span class=\"token punctuation\">)</span>\n        aniGreen<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 红色边框,圆形图片</span>\n        labelRed <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        labelRed<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        labelRed<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        labelRed<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">'border-image: url(1.jpg);border-radius: 50px;'</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>labelRed<span class=\"token punctuation\">)</span>\n        aniRed <span class=\"token operator\">=</span> AnimationShadowEffect<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span> labelGreen<span class=\"token punctuation\">)</span>\n        labelRed<span class=\"token punctuation\">.</span>setGraphicsEffect<span class=\"token punctuation\">(</span>aniRed<span class=\"token punctuation\">)</span>\n        aniRed<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 蓝色边框按钮</span>\n        button <span class=\"token operator\">=</span> QPushButton<span class=\"token punctuation\">(</span><span class=\"token string\">'按钮'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        aniButton <span class=\"token operator\">=</span> AnimationShadowEffect<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span>\n        button<span class=\"token punctuation\">.</span>setGraphicsEffect<span class=\"token punctuation\">(</span>aniButton<span class=\"token punctuation\">)</span>\n        aniButton<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 青色边框输入框</span>\n        lineedit <span class=\"token operator\">=</span> QLineEdit<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        aniEdit <span class=\"token operator\">=</span> AnimationShadowEffect<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>cyan<span class=\"token punctuation\">,</span> lineedit<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>lineedit<span class=\"token punctuation\">)</span>\n        lineedit<span class=\"token punctuation\">.</span>setGraphicsEffect<span class=\"token punctuation\">(</span>aniEdit<span class=\"token punctuation\">)</span>\n        aniEdit<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "PyQt",
                "动画",
                "阴影"
            ]
        },
        {
            "id": "https://pyqt5.com/circleimage.html",
            "url": "https://pyqt5.com/circleimage.html",
            "title": "PyQt5圆形图片",
            "date_published": "2018-09-25T14:13:26.000Z",
            "content_html": "<p>实现圆形图片的方法有很多，比如用遮罩（mask）, 裁切等等。这里比较几种实现方式，选出个人认为最优的方案。</p>\n<span id=\"more\"></span>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/CircleImage.py\">https://github.com/PyQt5/PyQt/blob/master/QLabel/CircleImage.py</a></p>\n<h2 id=\"采用mask方式\"><a class=\"markdownIt-Anchor\" href=\"#采用mask方式\">#</a> 采用 mask 方式</h2>\n<p>具体参考 <a href=\"https://www.cnblogs.com/zhehan54/p/9515124.html\">【Qt】QLabel 实现的圆形图像 - 米罗西 - 博客园</a></p>\n<h2 id=\"画圆形遮盖适合纯色背景\"><a class=\"markdownIt-Anchor\" href=\"#画圆形遮盖适合纯色背景\">#</a> 画圆形遮盖（适合纯色背景）</h2>\n<p>原理是在原图片上画一个 4 角有颜色，中间圆形镂空的图片。</p>\n<p><img src=\"/images/circleimage1.png\" alt=\"circleimage1\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">'''\nCreated on 2017年8月25日\n@author: Irony.\"[讽刺]\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@description: \n'''</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QPainter<span class=\"token punctuation\">,</span> QPainterPath\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QLabel<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span> QHBoxLayout\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token string\">\"By: Irony.\\\"[讽刺]\\nQQ: 892768447\\nEmail: 892768447@qq.com\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2017 Irony.\\\"[讽刺]\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Label</span><span class=\"token punctuation\">(</span>QLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>Antialiasing <span class=\"token operator\">=</span> antialiasing\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n        <span class=\"token comment\">#加载图片并缩放</span>\n        self<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"head.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>KeepAspectRatioByExpanding<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">:</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>HighQualityAntialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>SmoothPixmapTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n        path <span class=\"token operator\">=</span> QPainterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRoundedRect<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRect<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setPen<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>NoPen<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setBrush<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>drawPath<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"background: black;\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用qpainter的setcompositionmode\"><a class=\"markdownIt-Anchor\" href=\"#使用qpainter的setcompositionmode\">#</a> 使用 QPainter 的 setCompositionMode</h2>\n<p>具体参考 <a href=\"https://qtdream.com/topic/911/qt-%E5%9C%86%E5%BD%A2%E5%A4%B4%E5%83%8F%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7-%E6%8A%97%E9%94%AF%E9%BD%BF-%E5%8F%AF%E7%BC%A9%E6%94%BE%E7%BC%96%E8%BE%91\">Qt 圆形头像制作工具 抗锯齿 可缩放编辑</a></p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;result_avatar_size 是我们最后生成的图片的长宽，可以是QSize(200, 200)的正圆\ndestination_image &#x3D; QImage(result_avatar_size, QImage::Format_ARGB32_Premultiplied);\n&#x2F;&#x2F;在黑色的正方形中间画一个透明的圆，作为头像遮罩\nQPainter painter(&amp;destination_image);\npainter.setRenderHint(QPainter::Antialiasing);\n&#x2F;&#x2F;全涂黑\npainter.fillRect(destination_image.rect(), QBrush(Qt::black, Qt::SolidPattern));\npainter.setCompositionMode(QPainter::CompositionMode_SourceOut);\npainter.setPen(Qt::NoPen);\npainter.setBrush(QBrush(Qt::transparent, Qt::SolidPattern));\n&#x2F;&#x2F;画透明区域\npainter.drawEllipse(destination_image.rect());<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用qpainter的切割方法推荐\"><a class=\"markdownIt-Anchor\" href=\"#使用qpainter的切割方法推荐\">#</a> 使用 QPainter 的切割方法（推荐）</h2>\n<p>利用 <code>QPainter.setClipPath</code>  方法切割一个圆形的 <code>QPainterPath</code></p>\n<p><img src=\"/images/circleimage2.png\" alt=\"circleimage2\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">'''\nCreated on 2017年8月25日\n@author: Irony.\"[讽刺]\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@file: \n@description: \n'''</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QPainter<span class=\"token punctuation\">,</span> QPainterPath<span class=\"token punctuation\">,</span> QPen\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QLabel<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span> QHBoxLayout\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token string\">\"By: Irony.\\\"[讽刺]\\nQQ: 892768447\\nEmail: 892768447@qq.com\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2017 Irony.\\\"[讽刺]\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Label</span><span class=\"token punctuation\">(</span>QLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>Antialiasing <span class=\"token operator\">=</span> antialiasing\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n        <span class=\"token comment\">#####################核心实现#########################</span>\n        self<span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 大小和控件一样</span>\n        self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>transparent<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 填充背景为透明</span>\n\n        p <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"head.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>  <span class=\"token comment\"># 加载图片并缩放和控件一样大</span>\n            <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>KeepAspectRatioByExpanding<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 抗锯齿</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>HighQualityAntialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>SmoothPixmapTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#         painter.setPen(# 测试黑色圆圈</span>\n<span class=\"token comment\">#             QPen(Qt.black, 5, Qt.SolidLine, Qt.RoundCap, Qt.RoundJoin))</span>\n        path <span class=\"token operator\">=</span> QPainterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRoundedRect<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#**** 切割为圆形 ****#</span>\n        painter<span class=\"token punctuation\">.</span>setClipPath<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#         painter.drawPath(path)  # 测试黑色圆圈</span>\n\n        painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#####################核心实现#########################</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"background: black;\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "PyQt",
                "圆形",
                "图片"
            ]
        }
    ]
}