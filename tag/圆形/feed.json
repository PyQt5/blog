{
    "version": "https://jsonfeed.org/version/1",
    "title": "PyQt • All posts by \"圆形\" tag",
    "description": "Python PyQt PyQt6 PyQt5 PyQt4 PySide PySide2 PySide6",
    "home_page_url": "https://pyqt5.com",
    "items": [
        {
            "id": "https://pyqt5.com/circleimage.html",
            "url": "https://pyqt5.com/circleimage.html",
            "title": "PyQt5圆形图片",
            "date_published": "2018-09-25T14:13:26.000Z",
            "content_html": "<p>实现圆形图片的方法有很多，比如用遮罩（mask）, 裁切等等。这里比较几种实现方式，选出个人认为最优的方案。</p>\n<span id=\"more\"></span>\n<p><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/CircleImage.py\">https://github.com/PyQt5/PyQt/blob/master/QLabel/CircleImage.py</a></p>\n<h2 id=\"采用mask方式\"><a class=\"markdownIt-Anchor\" href=\"#采用mask方式\">#</a> 采用 mask 方式</h2>\n<p>具体参考 <a href=\"https://www.cnblogs.com/zhehan54/p/9515124.html\">【Qt】QLabel 实现的圆形图像 - 米罗西 - 博客园</a></p>\n<h2 id=\"画圆形遮盖适合纯色背景\"><a class=\"markdownIt-Anchor\" href=\"#画圆形遮盖适合纯色背景\">#</a> 画圆形遮盖（适合纯色背景）</h2>\n<p>原理是在原图片上画一个 4 角有颜色，中间圆形镂空的图片。</p>\n<p><img src=\"/images/circleimage1.png\" alt=\"circleimage1\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">'''\nCreated on 2017年8月25日\n@author: Irony.\"[讽刺]\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@description: \n'''</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QPainter<span class=\"token punctuation\">,</span> QPainterPath\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QLabel<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span> QHBoxLayout\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token string\">\"By: Irony.\\\"[讽刺]\\nQQ: 892768447\\nEmail: 892768447@qq.com\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2017 Irony.\\\"[讽刺]\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Label</span><span class=\"token punctuation\">(</span>QLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>Antialiasing <span class=\"token operator\">=</span> antialiasing\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n        <span class=\"token comment\">#加载图片并缩放</span>\n        self<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"head.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>KeepAspectRatioByExpanding<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">:</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>HighQualityAntialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>SmoothPixmapTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n        path <span class=\"token operator\">=</span> QPainterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRoundedRect<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRect<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setPen<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>NoPen<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>setBrush<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">)</span>\n        painter<span class=\"token punctuation\">.</span>drawPath<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"background: black;\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用qpainter的setcompositionmode\"><a class=\"markdownIt-Anchor\" href=\"#使用qpainter的setcompositionmode\">#</a> 使用 QPainter 的 setCompositionMode</h2>\n<p>具体参考 <a href=\"https://qtdream.com/topic/911/qt-%E5%9C%86%E5%BD%A2%E5%A4%B4%E5%83%8F%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7-%E6%8A%97%E9%94%AF%E9%BD%BF-%E5%8F%AF%E7%BC%A9%E6%94%BE%E7%BC%96%E8%BE%91\">Qt 圆形头像制作工具 抗锯齿 可缩放编辑</a></p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;result_avatar_size 是我们最后生成的图片的长宽，可以是QSize(200, 200)的正圆\ndestination_image &#x3D; QImage(result_avatar_size, QImage::Format_ARGB32_Premultiplied);\n&#x2F;&#x2F;在黑色的正方形中间画一个透明的圆，作为头像遮罩\nQPainter painter(&amp;destination_image);\npainter.setRenderHint(QPainter::Antialiasing);\n&#x2F;&#x2F;全涂黑\npainter.fillRect(destination_image.rect(), QBrush(Qt::black, Qt::SolidPattern));\npainter.setCompositionMode(QPainter::CompositionMode_SourceOut);\npainter.setPen(Qt::NoPen);\npainter.setBrush(QBrush(Qt::transparent, Qt::SolidPattern));\n&#x2F;&#x2F;画透明区域\npainter.drawEllipse(destination_image.rect());<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用qpainter的切割方法推荐\"><a class=\"markdownIt-Anchor\" href=\"#使用qpainter的切割方法推荐\">#</a> 使用 QPainter 的切割方法（推荐）</h2>\n<p>利用 <code>QPainter.setClipPath</code>  方法切割一个圆形的 <code>QPainterPath</code></p>\n<p><img src=\"/images/circleimage2.png\" alt=\"circleimage2\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token triple-quoted-string string\">'''\nCreated on 2017年8月25日\n@author: Irony.\"[讽刺]\n@site: https://pyqt5.com, https://github.com/892768447\n@email: 892768447@qq.com\n@file: \n@description: \n'''</span>\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtCore <span class=\"token keyword\">import</span> Qt\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtGui <span class=\"token keyword\">import</span> QPixmap<span class=\"token punctuation\">,</span> QPainter<span class=\"token punctuation\">,</span> QPainterPath<span class=\"token punctuation\">,</span> QPen\n<span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QLabel<span class=\"token punctuation\">,</span> QWidget<span class=\"token punctuation\">,</span> QHBoxLayout\n\n\n__Author__ <span class=\"token operator\">=</span> <span class=\"token string\">\"By: Irony.\\\"[讽刺]\\nQQ: 892768447\\nEmail: 892768447@qq.com\"</span>\n__Copyright__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Copyright (c) 2017 Irony.\\\"[讽刺]\"</span>\n__Version__ <span class=\"token operator\">=</span> <span class=\"token string\">\"Version 1.0\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Label</span><span class=\"token punctuation\">(</span>QLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>Antialiasing <span class=\"token operator\">=</span> antialiasing\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n        <span class=\"token comment\">#####################核心实现#########################</span>\n        self<span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 大小和控件一样</span>\n        self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>transparent<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 填充背景为透明</span>\n\n        p <span class=\"token operator\">=</span> QPixmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"head.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scaled<span class=\"token punctuation\">(</span>  <span class=\"token comment\"># 加载图片并缩放和控件一样大</span>\n            <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>KeepAspectRatioByExpanding<span class=\"token punctuation\">,</span> Qt<span class=\"token punctuation\">.</span>SmoothTransformation<span class=\"token punctuation\">)</span>\n\n        painter <span class=\"token operator\">=</span> QPainter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 抗锯齿</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>Antialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>HighQualityAntialiasing<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            painter<span class=\"token punctuation\">.</span>setRenderHint<span class=\"token punctuation\">(</span>QPainter<span class=\"token punctuation\">.</span>SmoothPixmapTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#         painter.setPen(# 测试黑色圆圈</span>\n<span class=\"token comment\">#             QPen(Qt.black, 5, Qt.SolidLine, Qt.RoundCap, Qt.RoundJoin))</span>\n        path <span class=\"token operator\">=</span> QPainterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        path<span class=\"token punctuation\">.</span>addRoundedRect<span class=\"token punctuation\">(</span>\n            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#**** 切割为圆形 ****#</span>\n        painter<span class=\"token punctuation\">.</span>setClipPath<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#         painter.drawPath(path)  # 测试黑色圆圈</span>\n\n        painter<span class=\"token punctuation\">.</span>drawPixmap<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setPixmap<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#####################核心实现#########################</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Window</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Window<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n        layout <span class=\"token operator\">=</span> QHBoxLayout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        layout<span class=\"token punctuation\">.</span>addWidget<span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> antialiasing<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setStyleSheet<span class=\"token punctuation\">(</span><span class=\"token string\">\"background: black;\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys\n    <span class=\"token keyword\">from</span> PyQt5<span class=\"token punctuation\">.</span>QtWidgets <span class=\"token keyword\">import</span> QApplication\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">=</span> Window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "PyQt",
                "圆形",
                "图片"
            ]
        }
    ]
}